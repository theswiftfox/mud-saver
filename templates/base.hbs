<!doctype html>

<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Mudrunner and Snowrunner Savegame Manager</title>
    <meta name="description" content="Description of the site">
    <meta name="author" content="The Author">

    <link rel="stylesheet" href="/static/w3.css">
    <link rel="stylesheet" href="/static/w3-theme-{{ this }}.css">
    <script src="/static/w3.js"></script>
</head>

<body onload="init()">
    <!-- Sidebar -->
    <div class="w3-sidebar w3-display-container w3-bar-block w3-card w3-animate-right"
        style="display: none; right: 0; outline: none" id="side">
        <button onclick="w3_close_sidebar()" class="w3-bar-item w3-theme-action w3-button w3-large">Close
            &times;</button>
        <div class="w3-bar-item w3-button" onclick="load_settings(true)">Settings</div>
        <a href="https://github.com/theswiftfox/mud-saver/issues" target="_blank" class="w3-bar-item w3-button">Report
            Issue</a>
        <div class="w3-bar-item w3-button" onclick="exit()">Exit</div>
        <div class="w3-panel w3-display-bottomleft">Version: 1.0.0</div>
    </div>
    <!-- Topbar -->
    <div class="w3-container w3-display-container w3-theme w3-center">
        <div id="overview-header" class="w3-container">
            <h1>MudSaver</h1>
            A savegame manager for MudRunner and SnowRunner
        </div>
        <div id="snowrunner-header" class="w3-container" style="display: none;">
            <h1>SnowRunner</h1>
            Backup or load savegame
        </div>
        <div id="mudrunner-header" class="w3-container" style="display: none;">
            <h1>MudRunner</h1>
            Backup or load savegame
        </div>
        <button id="menuBtn" class="w3-button w3-theme w3-xlarge w3-display-right"
            onclick="w3_open_sidebar()">&#x2630;</button>
        <button id="homeBtn" class="w3-button w3-theme w3-xlarge w3-display-left" style="display: none;"
            onclick="load_subpage('/overview')">&#5176;</button>
    </div>
    <div id="loading_bar_container" class="w3-light-grey">
        <div id="loading_bar" class="w3-container w3-theme" style="height:24px;width:1%"></div>
    </div>
    <!-- Content -->
    <div id="main" class="w3-container">
    </div>

    <!-- Settings Modal -->
    <div id="settings-modal" class="w3-modal">
        <div class="w3-modal-content">
            <div class="w3-card">
                <header class="w3-panel w3-theme">
                    <h2>MudSaver Settings</h2>
                </header>
                <div class="w3-container">
                    <span onclick="close_settings()"
                        class="w3-button w3-display-topright w3-small w3-black">&times;</span>
                    <ul class="w3-ul">
                        <li class="w3-bar">
                            <div class="w3-bar-item">Color Theme:</div>
                            <div class="w3-bar-item w3-right">
                                <div class="w3-dropdown-hover">
                                    <button id="selected_theme" class="w3-button" style="width: 150px;"></button>
                                    <div class="w3-dropdown-content w3-bar-block w3-border">
                                        <a href="#" class="w3-bar-item w3-button w3-hover-teal"
                                            onclick="set_selected_theme('teal')">Teal</a>
                                        <a href="#" class="w3-bar-item w3-button w3-hover-deep-orange"
                                            onclick="set_selected_theme('deep-orange')">Deep Orange</a>
                                        <a href="#" class="w3-bar-item w3-button w3-hover-brown"
                                            onclick="set_selected_theme('brown')">Brown</a>
                                        <a href="#" class="w3-bar-item w3-button w3-hover-black"
                                            onclick="set_selected_theme('black')">Black</a>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="w3-bar">
                            <div class="w3-bar-item">Enable Mudrunner:</div>
                            <div class="w3-bar-item w3-right">
                                <input id="mr_enabled" class="w3-check" type="checkbox" onclick="toggle_mr()">
                            </div>
                        </li>
                        <li class="w3-bar">
                            <div class="w3-bar-item">Enable Snowrunner:</div>
                            <div class="w3-bar-item w3-right">
                                <input id="sr_enabled" class="w3-check" type="checkbox" onclick="toggle_sr()">
                            </div>
                        </li>
                    </ul>
                </div>
                <footer class="w3-container w3-light-gray">
                    <div class="w3-container" style="padding: 15px;">
                        <button id="save_btn" class="w3-right w3-button w3-border w3-round-large w3-theme"
                            onclick="save_settings()">Save</button>
                    </div>
                </footer>
            </div>
        </div>
    </div>

    <div id="info-modal" class="w3-modal">
        <div class="w3-modal-content w3-animate-zoom" style="max-width: 300px;">
            <div class="w3-center w3-padding-16">
                <h2 id="info-title"></h2>
                <div id="info-content" class="w3-container">
                    <span id="info-content" class="w3-text"></span>
                </div>
            </div>
            <div class="w3-bar w3-container w3-border-top w3-padding-8 w3-light-grey">
                <div class="w3-right" style="padding: 8px;">
                    <button id="info-retry"
                        class="w3-bar-item w3-button w3-small w3-border w3-margin-right w3-round-large w3-red"
                        style="display: none;">Retry</button>
                    <button id="info-accept"
                        class="w3-bar-item w3-button w3-small w3-border w3-round-large w3-dark-gray">Ok</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const enterKey = 13;
        const escapeKey = 27;

        var settings = null;
        var selected_snowrunner_profile = null;
        var save_snowrunner_profile = null;

        var settings_visible = false;

        function init() {
            var http = new XMLHttpRequest();
            http.open('GET', '/settings');
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4 && this.status == 200) {
                    w3.hide('#loading_bar_container');
                    settings = JSON.parse(http.responseText);
                    if ((settings.enable_snowrunner && settings.enable_mudrunner) ||
                        (!settings.enable_mudrunner && !settings.enable_snowrunner)) {
                        load_subpage('/overview');
                    } else {
                        if (settings.enable_mudrunner) {
                            load_subpage('/mud-runner', true, true);
                        } else {
                            load_subpage('/snow-runner', true, true);
                        }
                    }
                }
            };
            var bar = document.getElementById('loading_bar');
            var width = 1;
            var id = setInterval(frame, 10);
            function frame() {
                if (width >= 100) {
                    clearInterval(id);
                } else {
                    width++;
                    bar.style.width = width + '%';
                }
            }
        }

        function exit() {
            var http = new XMLHttpRequest();
            http.open('POST', '/exit');
            http.send();
            http.onerror = function (err) {
                if (err) {
                    // todo: some "you can close this window now info"
                }
            }
        }

        function blurAll() {
            var tmp = document.createElement("input");
            document.body.appendChild(tmp);
            tmp.focus();
            document.body.removeChild(tmp);
            tmp.blur();
        }

        function show_info(title, message) {
            show_info_with_action(title, message, null);
        }

        function show_info_with_action(title, message, action) {
            // remove focus from any remaining input elements
            blurAll();
            // cleanup so we dont get a ton of event handlers on the same object
            var old = document.getElementById('info-modal');
            var info = old.cloneNode(true);
            old.parentNode.replaceChild(info, old);

            w3.hide('#info-retry');
            document.getElementById('info-title').innerHTML = title;
            document.getElementById('info-content').innerHTML = message;
            var btn = document.getElementById('info-accept');
            if (action != null) {
                btn.onclick = function () {
                    action();
                    w3.hide('#info-modal');
                };
            } else {
                btn.onclick = w3.hide('#info-modal');
            }

            // add escape and enter trigger ok action -> aka close this popup
            info.tabIndex = -1;
            info.addEventListener('keyup', function (event) {
                if (event.keyCode === enterKey || event.keyCode === escapeKey) {
                    event.preventDefault();
                    btn.click();
                }
            });

            w3.show('#info-modal');
            document.getElementById('info-modal').focus();
        }

        function show_info_with_retry(title, message, okAction, retryAction) {
            blurAll();

            document.getElementById('info-title').innerHTML = title;
            document.getElementById('info-content').innerHTML = message;
            var okbtn = document.getElementById('info-accept');
            if (okAction != null) {
                okbtn.onclick = function () {
                    okAction();
                    w3.hide('#info-modal');
                };
            } else {
                okbtn.onclick = function () {
                    w3.hide('#info-modal');
                };
            }
            var retryBtn = document.getElementById('info-retry');
            if (retryAction != null) {
                w3.show('#info-retry');
                retryBtn.onclick = function () {
                    retryAction();
                    w3.hide('#info-modal');
                };
            } else {
                w3.hide('#info-retry');
                retryBtn.action = null;
            }

            // add escape and rigger ok action -> aka close this popup
            let info = document.getElementById('info-modal');
            info.tabIndex = -1;
            info.addEventListener('keyup', function (event) {
                if (event.keyCode === escapeKey) {
                    event.preventDefault();
                    okbtn.click();
                }

                if (event.keyCode === enterKey) {
                    event.preventDefault();
                    if (retryAction != null) {
                        retryBtn.click();
                    } else {
                        okbtn.click();
                    }
                }
            });

            w3.show('#info-modal');
            document.getElementById('info-modal').focus();
        }

        function w3_open_sidebar() {
            var old = document.getElementById('side');
            var sidebar = old.cloneNode(true);
            old.parentNode.replaceChild(sidebar, old);

            document.getElementById('main').style.marginRight = '15%';
            sidebar.style.width = '15%';
            sidebar.style.display = 'block';
            document.getElementById('menuBtn').style.display = 'none';

            // close sidebar with esc
            sidebar.tabIndex = -1;
            sidebar.focus();
            sidebar.addEventListener('keyup', function (event) {
                if (event.keyCode === escapeKey) {
                    event.preventDefault();
                    w3_close_sidebar();
                }
            });
            sidebar.addEventListener('focusout', function (event) {
                if (!settings_visible) {
                    w3_close_sidebar();
                }
            })
        }

        function w3_close_sidebar() {
            document.getElementById('main').style.marginRight = '0%';
            document.getElementById('side').style.width = '0%';
            document.getElementById('side').style.display = 'none';
            document.getElementById('menuBtn').style.display = 'inline-block';
        }

        function load_subpage(target, showSettings, hideHome) {
            var showBack = target.includes('mud-runner') || target.includes('snow-runner');
            if (!showBack) {
                w3.hide('#homeBtn');
            }
            var elem = document.getElementById('main');
            var xhttp = new XMLHttpRequest();
            xhttp.open('GET', target);
            xhttp.send();
            xhttp.onreadystatechange = function () {
                if (xhttp.readyState == 4) {
                    if (this.status == 200) {
                        elem.innerHTML = xhttp.responseText;
                        if (showBack) {
                            if (!showSettings) {
                                w3.hide('#menuBtn');
                            }
                            if (!hideHome) {
                                w3.show('#homeBtn');
                            }
                            w3.hide('#overview-header');

                            if (target.includes('mud-runner')) {
                                w3.show('#mudrunner-header');
                            } else {
                                w3.show('#snowrunner-header');
                            }
                        } else {
                            w3.hide('#snowrunner-header');
                            w3.hide('#mudrunner-header');
                            w3.show('#overview-header');
                            w3.show('#menuBtn')
                        }
                    }
                    if (this.status == 404) {
                        elem.innerHTML = 'Error loading Subpage!';
                    }
                }
            }

            return;
        }

        function load_saves(uuid) {
            if (selected_snowrunner_profile) {
                w3.hide("[id='" + selected_snowrunner_profile + "']");
            }
            var http = new XMLHttpRequest();
            http.open('GET', '/snow-runner/profile?id=' + uuid);
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    if (this.status == 200) {
                        document.getElementById('saves').innerHTML = http.responseText;
                        selected_snowrunner_profile = uuid;
                        w3.show("[id='" + selected_snowrunner_profile + "']");
                    } else {
                        show_info('Error loading SaveGames', http.responseText);
                    }
                }
            }
        }

        function load_saves_mudrunner() {
            var http = new XMLHttpRequest();
            http.open('GET', '/mud-runner/profile');
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    if (this.status == 200) {
                        document.getElementById('saves').innerHTML = http.responseText;
                    } else {
                        console.warn(http.responseText);
                    }
                }
            }
        }

        function backup_snowrunner() {
            var profile = document.getElementById('snowrunner-save-modal').getAttribute('profile');
            var name = document.getElementById('snowrunner-save-name').value;
            var http = new XMLHttpRequest();
            http.open('POST', '/snow-runner/profile?id=' + profile + '&name=' + name);
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    if (this.status == 200) {
                        var action = function () {
                            close_snowrunner_modal();
                            load_saves(profile);
                        };
                        show_info_with_action('Backup Success!', '', action);
                    } else {
                        show_info_with_retry('Error on Backup', 'Cause:<br>' + http.responseText, null, backup_snowrunner);
                    }
                }
            }
        }

        function backup_mudrunner() {
            var original_name = document.getElementById('mudrunner-save-modal').getAttribute('original_name');
            var user_name = document.getElementById('mudrunner-save-name').value;
            var http = new XMLHttpRequest();
            http.open('POST', '/mud-runner/save?original_name=' + original_name + '&user_name=' + user_name);
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    if (this.status == 200) {
                        show_info_with_action('Backup Success!', '', close_mudrunner_modal);
                    } else {
                        show_info_with_retry('Error on Backup', 'Cause:<br>' + http.responseText, null, backup_mudrunner);
                    }
                }
            }
        }

        function delete_snowrunner(save_uuid) {
            var http = new XMLHttpRequest();
            http.open('DELETE', '/snow-runner/profile?id=' + selected_snowrunner_profile + '&savegame=' + save_uuid);
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    if (this.status == 200) {
                        let action = function () {
                            load_saves(selected_snowrunner_profile);
                        }
                        show_info_with_action('Delete Success!', '', action);
                    } else {
                        let retry = function () {
                            delete_snowrunner(save_uuid);
                        };
                        show_info_with_retry('Unabtle to Delete', 'Cause:<br>' + http.responseText, null, retry);
                    }
                }
            }
        }

        function restore_snowrunner(save_uuid) {
            var http = new XMLHttpRequest();
            http.open('PUT', '/snow-runner/profile?id=' + selected_snowrunner_profile + '&savegame=' + save_uuid);
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    if (this.status == 200) {
                        let action = function () {
                            var show_buttons = true;
                            if (settings.enable_mudrunner && settings.enable_snowrunner) {
                                show_buttons = false;
                            }
                            load_subpage('/snow-runner', show_buttons, show_buttons);
                            load_saves(selected_snowrunner_profile);
                        }
                        show_info_with_action('Restore Succesful', '', action);
                    } else {
                        let retry = function () {
                            restore_snowrunner(save_uuid);
                        }
                        show_info_with_retry('Unabtle to Restore', 'Cause:<br>' + http.responseText, null, retry);
                    }
                }
            }
        }

        function restore_mudrunner(user_name) {
            var http = new XMLHttpRequest();
            http.open('PUT', '/mud-runner/profile?user_name=' + user_name);
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    if (this.status == 200) {
                        alert('Restore successful');
                    }
                    var show_buttons = true;
                    if (settings.enable_mudrunner && settings.enable_snowrunner) {
                        show_buttons = false;
                    }
                    load_subpage('/mud-runner', show_buttons, show_buttons);
                    load_saves_mudrunner();
                } else {
                    alert(http.responseText);
                }
            }
        }

        function open_snowrunner_modal(uuid) {
            var old = document.getElementById('snowrunner-save-modal');
            var modal = old.cloneNode(true);
            old.parentNode.replaceChild(modal, old);

            modal.style.display = 'block';
            modal.setAttribute('profile', uuid);

            // close on escape
            modal.tabIndex = -1;
            modal.addEventListener('keyup', function (event) {
                if (event.keyCode === escapeKey) {
                    event.preventDefault();
                    close_snowrunner_modal();
                }
            });

            // save on enter inside input field
            document.getElementById('snowrunner-save-name').addEventListener('keyup', function (event) {
                if (event.keyCode === enterKey) {
                    event.preventDefault();
                    document.getElementById('snowrunner-save-button').click();
                }
            });

            document.getElementById('snowrunner-save-name').focus();
        }

        function close_snowrunner_modal() {
            var modal = document.getElementById('snowrunner-save-modal');
            modal.style.display = 'none';
            modal.setAttribute('profile', null)
            document.getElementById('snowrunner-save-name').value = null;
        }

        function open_mudrunner_modal(original_name) {
            var old = document.getElementById('mudrunner-save-modal');
            var modal = old.cloneNode(true);
            old.parentNode.replaceChild(modal, old);

            modal.style.display = 'block';
            modal.setAttribute('original_name', original_name);

            // close on escape
            modal.tabIndex = -1;
            modal.addEventListener('keyup', function (event) {
                if (event.keyCode === escapeKey) {
                    event.preventDefault();
                    close_mudrunner_modal();
                }
            });

            // save on enter inside input field
            document.getElementById('mudrunner-save-name').addEventListener('keyup', function (event) {
                if (event.keyCode === enterKey) {
                    event.preventDefault();
                    document.getElementById('mudrunner-save-button').click();
                }
            });

            document.getElementById('mudrunner-save-name').focus();
        }

        function close_mudrunner_modal() {
            var modal = document.getElementById('mudrunner-save-modal');
            modal.style.display = 'none';
            modal.setAttribute('original_name', null)
            document.getElementById('mudrunner-save-name').value = null;
        }

        function load_settings(showModal) {
            var http = new XMLHttpRequest();
            http.open('GET', '/settings');
            http.send();
            http.onreadystatechange = function () {
                if (http.readyState == 4 && this.status == 200) {
                    settings = JSON.parse(http.responseText);
                    display_settings(settings);
                    if (showModal) {
                        var old = document.getElementById('settings-modal');
                        var modal = old.cloneNode(true);
                        old.parentNode.replaceChild(modal, old);

                        modal.style.display = 'block';
                        check_valid_settings();
                        settings_visible = true;

                        // add escape handling to settings modal
                        modal.tabIndex = -1;
                        modal.focus();
                        modal.addEventListener('keyup', function (event) {
                            if (event.keyCode === escapeKey) {
                                event.preventDefault();
                                close_settings();
                            }
                            if (event.keyCode === enterKey) {
                                event.preventDefault();
                                save_settings();
                            }
                        });
                    }
                }
            };
        }

        function close_settings() {
            w3.hide('#settings-modal');
            settings_visible = false;
            document.getElementById('side').focus();
        }

        function display_settings(settings) {
            set_selected_theme(settings.color);
            document.getElementById('mr_enabled').checked = settings.enable_mudrunner;
            document.getElementById('sr_enabled').checked = settings.enable_snowrunner;
        }


        function set_selected_theme(theme) {
            settings.color = theme;
            var elem = document.getElementById('selected_theme');
            var oldColor = elem.innerHTML;
            elem.innerHTML = theme;
            if (oldColor != '') {
                elem.classList.remove('w3-' + oldColor);
            }
            elem.classList.add('w3-' + theme);
        }

        function check_valid_settings() {
            var btn = document.getElementById('save_btn')
            if (!(settings.enable_mudrunner || settings.enable_snowrunner)) {
                btn.disabled = true;
            } else {
                btn.disabled = false;
            }
        }

        function toggle_mr() {
            settings.enable_mudrunner = !settings.enable_mudrunner;
            check_valid_settings();
        }
        function toggle_sr() {
            settings.enable_snowrunner = !settings.enable_snowrunner;
            check_valid_settings();
        }

        function save_settings() {
            var http = new XMLHttpRequest();
            http.open('POST', '/settings');
            http.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
            http.send(JSON.stringify(settings));
            http.onreadystatechange = function () {
                if (http.readyState == 4 && this.status == 200) {
                    let action = function () {
                        location.reload();
                    };
                    show_info_with_action('Settings saved!', '', action);
                } else {
                    show_info_with_retry('Unabtle to save Settings', 'Cause:<br>' + http.responseText, null, save_settings);
                }
            }
        }

    </script>
</body>