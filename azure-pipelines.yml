trigger:
  branches:
    include: ['develop']
  tags:
    include: ['*']

strategy:
  matrix:
    windows-nightly:
      imageName: 'vs2017-win2016'
      rustup_toolchain: nightly
    linux-nightly:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: nightly

pool:
  vmImage: $(imageName)

steps:
  - script: |
      set -e
      curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rust}}
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --profile minimal --default-toolchain %RUSTUP_TOOLCHAIN% --default-host x86_64-pc-windows-msvc
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rust}}
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )

  - bash: |
      rustup default $RUSTUP_TOOLCHAIN
      rustup update $RUSTUP_TOOLCHAIN
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rust}}
    displayName: "Set correct Rust version"

    #build
  - script: cargo build --release --features embed_ui
    displayName: Cargo build (WIN)
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo build --release
    displayName: Cargo build (LINUX)
    condition: ne( variables['Agent.OS'], 'Windows_NT' )

